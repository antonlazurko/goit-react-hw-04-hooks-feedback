{"version":3,"sources":["Feedback/Statistic/Statistic.module.css","Feedback/Feedback.module.css","Feedback/Section/Section.module.css","Feedback/FeedbackOptions/FeedbackOptions.module.css","Feedback/Section/Section.jsx","Feedback/FeedbackOptions/FeedbackOptions.jsx","Feedback/Statistic/Statistic.jsx","Feedback/Notification/Notification.jsx","Feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","className","styles","Controls","options","onLeaveFeedback","map","type","name","buttons","onClick","Statistic","props","Object","keys","stats","toUpperCase","value","Notification","message","Feedback","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","e","target","prevState","total","positivePercentage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,0B,kBCA3FD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,8B,iBCApED,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,mC,uKCSbC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOJ,QAA3B,UACGC,GAAS,6BAAKA,IACdC,M,gBCeUG,EAjBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OAAOD,EAAQE,KAAI,SAAAC,GACjB,OACE,8BACE,wBACEC,KAAMD,EACNN,UAAWC,IAAOO,QAClBF,KAAK,SACLG,QAASL,EAJX,SAMGE,KAPKA,O,gBCkBDI,EArBG,SAAAC,GAEhB,OADcC,OAAOC,KAAKF,GACbN,KAAI,SAAAC,GACf,OACE,qBAAgBN,UAAWC,IAAOa,MAAlC,SACE,uBAAMd,UAAWC,IAAOK,KAAxB,UACY,uBAATA,EACG,sBACAA,EAAKS,cAHX,IAKE,uBAAMf,UAAWC,IAAOe,MAAxB,UACGL,EAAML,GAEG,uBAATA,GAAiC,WAT9BA,O,gBCJDW,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGlB,UAAWC,IAAOgB,aAArB,SAAoCC,KCM9B,SAASC,IAAY,IAAD,EACTC,mBAAS,GADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAEHF,mBAAS,GAFN,mBAE1BG,EAF0B,KAEjBC,EAFiB,OAGXJ,mBAAS,GAHE,mBAG1BK,EAH0B,KAGrBC,EAHqB,KAK3BC,EAAqB,kBAAMN,EAAOE,EAAUE,GAC5CG,EAAkC,kBACtCC,KAAKC,MAAOT,EAAOM,IAAwB,MAwB7C,OACE,gCACE,cAAC,EAAD,CAAS7B,MAAO,wBAAyBE,UAAU,UAAnD,SACE,qBAAKA,UAAWC,IAAOC,SAAvB,SACE,cAAC,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5Bc,SAAA2B,GACtB,OAAQA,EAAEC,OAAOzB,MACf,IAAK,OACHe,GAAQ,SAAAW,GAAS,OAAIA,EAAY,KAEjC,MACF,IAAK,UACHT,GAAW,SAAAS,GAAS,OAAIA,EAAY,KAEpC,MACF,IAAK,MACHP,GAAO,SAAAO,GAAS,OAAIA,EAAY,KAEhC,MACF,QACE,OAGJN,IACAC,WAaE,qBAAK5B,UAAWC,IAAOS,UAAvB,SACE,eAAC,EAAD,CAASZ,MAAO,YAAaE,UAAU,UAAvC,WACI2B,KACA,cAAC,EAAD,CAAcT,QAAQ,sBAEvBS,KACC,cAAC,EAAD,CACEN,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLS,MAAOP,IACPQ,mBAAoBP,cCvDnBQ,MAHf,WACE,OAAO,cAACjB,EAAD,KCETkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8b19fa0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistic_stats__1kpdZ\",\"value\":\"Statistic_value__nNKwZ\",\"type\":\"Statistic_type__23Pcw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Feedback_Controls__1t0Xj\",\"Statistic\":\"Feedback_Statistic__3aTZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3T2DE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__1SSsK\"};","import React from 'react';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst Controls = ({ options, onLeaveFeedback }) => {\r\n  return options.map(type => {\r\n    return (\r\n      <div key={type}>\r\n        <button\r\n          name={type}\r\n          className={styles.buttons}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {type}\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Controls;\r\nControls.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import styles from './Statistic.module.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistic = props => {\r\n  const types = Object.keys(props);\r\n  return types.map(type => {\r\n    return (\r\n      <div key={type} className={styles.stats}>\r\n        <span className={styles.type}>\r\n          {type === 'positivePercentage'\r\n            ? 'POSITIVE PERCENTAGE'\r\n            : type.toUpperCase()}\r\n          :\r\n          <span className={styles.value}>\r\n            {props[type]}\r\n\r\n            {type === 'positivePercentage' && '%'}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Statistic;\r\nStatistic.propTypes = {\r\n  props: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n","import styles from './Notification.module.css';\r\nconst Notification = ({ message }) => {\r\n  return <p className={styles.Notification}>{message}</p>;\r\n};\r\nexport default Notification;\r\n","import styles from './Feedback.module.css';\r\nimport { useState } from 'react';\r\n\r\nimport Section from './Section';\r\nimport Controls from './FeedbackOptions';\r\nimport Statistic from './Statistic';\r\nimport Notification from './Notification';\r\n\r\nexport default function Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n  const countPositiveFeedbackPercentage = () =>\r\n    Math.round((good / countTotalFeedback()) * 100);\r\n\r\n  const onLeaveFeedback = e => {\r\n    switch (e.target.name) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n\r\n        break;\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    countTotalFeedback();\r\n    countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Section title={'Please leave feedback'} className=\"Section\">\r\n        <div className={styles.Controls}>\r\n          <Controls\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          />\r\n        </div>\r\n      </Section>\r\n      <div className={styles.Statistic}>\r\n        <Section title={'Statistic'} className=\"Section\">\r\n          {!countTotalFeedback() && (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          )}\r\n          {countTotalFeedback() && (\r\n            <Statistic\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Feedback from './Feedback';\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}